
package ClientOfHotel;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Services", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Services {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ShowReservation")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ShowReservation", targetNamespace = "http://services/", className = "ClientOfHotel.ShowReservation")
    @ResponseWrapper(localName = "ShowReservationResponse", targetNamespace = "http://services/", className = "ClientOfHotel.ShowReservationResponse")
    @Action(input = "http://services/Services/ShowReservationRequest", output = "http://services/Services/ShowReservationResponse")
    public String showReservation(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "SearchByID")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "SearchByID", targetNamespace = "http://services/", className = "ClientOfHotel.SearchByID")
    @ResponseWrapper(localName = "SearchByIDResponse", targetNamespace = "http://services/", className = "ClientOfHotel.SearchByIDResponse")
    @Action(input = "http://services/Services/SearchByIDRequest", output = "http://services/Services/SearchByIDResponse")
    public String searchByID(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Show")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Show", targetNamespace = "http://services/", className = "ClientOfHotel.Show")
    @ResponseWrapper(localName = "ShowResponse", targetNamespace = "http://services/", className = "ClientOfHotel.ShowResponse")
    @Action(input = "http://services/Services/ShowRequest", output = "http://services/Services/ShowResponse")
    public String show();

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg6
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Booking")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Booking", targetNamespace = "http://services/", className = "ClientOfHotel.Booking")
    @ResponseWrapper(localName = "BookingResponse", targetNamespace = "http://services/", className = "ClientOfHotel.BookingResponse")
    @Action(input = "http://services/Services/BookingRequest", output = "http://services/Services/BookingResponse")
    public String booking(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        int arg5,
        @WebParam(name = "arg6", targetNamespace = "")
        int arg6);

}
